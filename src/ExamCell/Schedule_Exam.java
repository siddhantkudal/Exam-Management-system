/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ExamCell;

import java.awt.Color;
import java.awt.Font;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import test.MySQLConnection;

/**
 *
 * @author ikuna
 */
public class Schedule_Exam extends javax.swing.JFrame {

    public static String studclass;
    public static String deptcode;
    public static String ExamType;
    public static String selectedsem;

    /**
     * Creates new form Schedule_Exam
     */
    public Schedule_Exam() {
        initComponents();
        Scheduletable.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD,14));
        Scheduletable.getTableHeader().setOpaque(false);
        Scheduletable.getTableHeader().setBackground(new Color(32,136,203));
        Scheduletable.getTableHeader().setForeground(new Color(255,255,255));
        Scheduletable.setRowHeight(25);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
//          if(Scheduletable.getRowCount()!=0)
//          {
//                int select_row=Scheduletable.getSelectedRow();
//        String subcode=(Scheduletable.getModel().getValueAt(select_row,0).toString());
//        String subname=(Scheduletable.getModel().getValueAt(select_row,1).toString());
//        setselectrow(subcode,subname);
//          }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        time2 = new cambodia.raven.Time();
        time1 = new cambodia.raven.Time();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        SearchBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        SelectedSubCode = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        SelectedSubName = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        Selectedacademicyear = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        StartTime_tf = new javax.swing.JTextField();
        EndTime_tf = new javax.swing.JTextField();
        Selectedexamid = new javax.swing.JTextField();
        StartTime_Button = new javax.swing.JButton();
        EndTime_Button = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Scheduletable = new javax.swing.JTable();
        Dept_select = new javax.swing.JComboBox<>();
        Semester_code = new javax.swing.JComboBox<>();
        Subject_code = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        SchedualBtn = new javax.swing.JButton();

        time2.setTextFocusable(false);
        time2.setTextRefernce(EndTime_tf);

        time1.setTextRefernce(StartTime_tf);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jPanel2.setBackground(new java.awt.Color(19, 103, 149));
        jPanel2.setForeground(new java.awt.Color(250, 250, 250));

        SearchBtn.setBackground(new java.awt.Color(204, 204, 204));
        SearchBtn.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        SearchBtn.setText("Search");
        SearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBtnActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(250, 250, 250));
        jLabel3.setText("Subject Code :");

        SelectedSubCode.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        SelectedSubCode.setForeground(new java.awt.Color(255, 255, 255));
        SelectedSubCode.setText("Not selected");
        SelectedSubCode.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(250, 250, 250));
        jLabel5.setText("Subject Name :");

        SelectedSubName.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        SelectedSubName.setForeground(new java.awt.Color(255, 255, 255));
        SelectedSubName.setText("Not selected");
        SelectedSubName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(250, 250, 250));
        jLabel7.setText("Academic Year :");

        Selectedacademicyear.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Selectedacademicyear.setForeground(new java.awt.Color(250, 250, 250));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(250, 250, 250));
        jLabel8.setText("Date :");

        jDateChooser1.setForeground(new java.awt.Color(250, 250, 250));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(250, 250, 250));
        jLabel9.setText("Start Time :");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(250, 250, 250));
        jLabel10.setText("End Time :");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(250, 250, 250));
        jLabel11.setText("Examination ID :");

        StartTime_tf.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        StartTime_tf.setForeground(new java.awt.Color(250, 250, 250));

        EndTime_tf.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        EndTime_tf.setForeground(new java.awt.Color(250, 250, 250));

        Selectedexamid.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Selectedexamid.setForeground(new java.awt.Color(250, 250, 250));

        StartTime_Button.setText(".....");
        StartTime_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartTime_ButtonActionPerformed(evt);
            }
        });

        EndTime_Button.setText(".....");
        EndTime_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EndTime_ButtonActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(250, 250, 250));
        jLabel12.setText("Schedule Exam");

        Scheduletable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Subject Code", "Subject Name", "Dept Code", "Semester", "Class", "Subject Type", "Theory/Prcatical"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Scheduletable.setFocusable(false);
        Scheduletable.setIntercellSpacing(new java.awt.Dimension(0, 0));
        Scheduletable.setRowHeight(25);
        Scheduletable.setSelectionBackground(new java.awt.Color(232, 57, 95));
        Scheduletable.setShowVerticalLines(false);
        Scheduletable.getTableHeader().setReorderingAllowed(false);
        Scheduletable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ScheduletableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Scheduletable);

        Dept_select.setBackground(new java.awt.Color(19, 103, 149));
        Dept_select.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        Dept_select.setForeground(new java.awt.Color(250, 250, 250));
        Dept_select.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "CSE", "IT", "ENTC", "ELN", "CIVIL", "MECH", "MTECH", " " }));
        Dept_select.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Dept_selectActionPerformed(evt);
            }
        });

        Semester_code.setBackground(new java.awt.Color(19, 103, 149));
        Semester_code.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        Semester_code.setForeground(new java.awt.Color(250, 250, 250));
        Semester_code.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "1", "2", "3", "4", "5", "6", "7", "8" }));

        Subject_code.setBackground(new java.awt.Color(19, 103, 149));
        Subject_code.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        Subject_code.setForeground(new java.awt.Color(250, 250, 250));
        Subject_code.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "Mandatory", "Elective" }));
        Subject_code.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Subject_codeActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(250, 250, 250));
        jLabel13.setText("Department");

        jLabel14.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(250, 250, 250));
        jLabel14.setText("Semester");

        jLabel15.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(250, 250, 250));
        jLabel15.setText("Subject Type");

        SchedualBtn.setBackground(new java.awt.Color(204, 204, 204));
        SchedualBtn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        SchedualBtn.setText("Schedual");
        SchedualBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SchedualBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(SelectedSubName, javax.swing.GroupLayout.DEFAULT_SIZE, 334, Short.MAX_VALUE)
                                .addComponent(SchedualBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(SelectedSubCode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Selectedacademicyear)
                                    .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                                    .addComponent(StartTime_tf)
                                    .addComponent(EndTime_tf)
                                    .addComponent(Selectedexamid))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(StartTime_Button)
                                    .addComponent(EndTime_Button)))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(371, 371, 371)
                        .addComponent(jLabel12)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Dept_select, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(Semester_code, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(33, 33, 33)
                        .addComponent(Subject_code, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(233, 233, 233)
                        .addComponent(SearchBtn)
                        .addGap(234, 234, 234))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE)
                        .addGap(35, 35, 35)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(509, 509, 509))))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(12, 12, 12)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 866, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12)
                .addGap(3, 3, 3)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Dept_select, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Semester_code, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Subject_code, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SearchBtn)))
                .addGap(201, 201, 201)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(SelectedSubCode))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SelectedSubName)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(Selectedacademicyear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(StartTime_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StartTime_Button))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(EndTime_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EndTime_Button))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(Selectedexamid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(SchedualBtn)
                .addGap(98, 98, 98))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(105, 105, 105)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(425, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void StartTime_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartTime_ButtonActionPerformed
        // TODO add your handling code here:
        time1.showPopup();
    }//GEN-LAST:event_StartTime_ButtonActionPerformed

    private void EndTime_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EndTime_ButtonActionPerformed
        // TODO add your handling code here:
        time2.showPopup();

    }//GEN-LAST:event_EndTime_ButtonActionPerformed


    private void SearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tbmodel = (DefaultTableModel) Scheduletable.getModel();
        tbmodel.setRowCount(0);
        try {

            Connection myConn = MySQLConnection.getConnection();

            String dept_select = "=" + "'" + Dept_select.getSelectedItem().toString() + "'";
            String semester_code = "=" + "'" + Semester_code.getSelectedItem().toString() + "'";
            String subject_type = "=" + "'" + Subject_code.getSelectedItem().toString() + "'";

            //            String s1="=";
            //            String s2="=";
            //            String s3="=";
            //if (LoginSession.Usertype.equals("ExamCell"))
            if (true) {

                if (dept_select.equals("='All'")) {
                    dept_select = " in('IT','CSE','ELN','ENTC','MECH','CIVIL','MTECH')";

                }
                if (semester_code.equals("='All'")) {
                    semester_code = "in(1,2,3,4,5,6,7,8)";

                }
                if (subject_type.equals("='All'")) {
                    subject_type = " in('Mandatory','Elective')";

                }
                String mySqlQuery
                        = "SELECT Sub_Code,Sub_Name,subject.Type,Department.Dept_code,subject.Semester,subject.Class,subject.TheoryPractical from subject inner join Department on subject.Dept_Id = Department.Dept_Id where subject.Semester " + semester_code + " and subject.Type " + subject_type + " and subject.Dept_Id in (select Dept_Id from department where Dept_code " + dept_select + ")";

                PreparedStatement preparedStatement = myConn.prepareStatement(mySqlQuery);
                //System.out.println(mySqlQuery);
                ResultSet resultSet = preparedStatement.executeQuery();

                while (resultSet.next()) {

                    String subject_code = resultSet.getString("Sub_Code");
                    String subject_name = resultSet.getString("Sub_Name");
                    String dept_code = resultSet.getString("Dept_Code");
                    String semester = String.valueOf(resultSet.getInt("Semester"));
                    String Class = resultSet.getString("Class");
                    String type = resultSet.getString("Type");
                    String Type2 = resultSet.getString("TheoryPractical");

                    String tbdata[] = {subject_code, subject_name, dept_code, semester, Class, type, Type2};

                    tbmodel.addRow(tbdata);

                }
                myConn.close();

            }

        } catch (Exception exception) {
            //System.out.print(exception);
            JOptionPane.showMessageDialog(this, "Database error: " + exception.getMessage());
        }


    }//GEN-LAST:event_SearchBtnActionPerformed

    private void ScheduletableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ScheduletableMouseClicked
        // TODO add your handling code here:
        
        int select_row = Scheduletable.getSelectedRow();
        String subcode = (Scheduletable.getModel().getValueAt(select_row, 0).toString());
        String subname = (Scheduletable.getModel().getValueAt(select_row, 1).toString());
        deptcode = (Scheduletable.getModel().getValueAt(select_row, 2).toString());
        selectedsem = (Scheduletable.getModel().getValueAt(select_row, 3).toString());
        studclass = (Scheduletable.getModel().getValueAt(select_row, 4).toString()) + "-0" + selectedsem;
        ExamType = (Scheduletable.getModel().getValueAt(select_row, 6).toString());
        SelectedSubCode.setText(subcode);
        SelectedSubName.setText(subname);

        try {
            Connection myConn = MySQLConnection.getConnection();
            String mySqlQuery = "select AcademicYear from academicyear order by AcademicYear desc limit 1";
            PreparedStatement preparedStatement = myConn.prepareStatement(mySqlQuery);
            //System.out.println(mySqlQuery);
            ResultSet resultSet = preparedStatement.executeQuery();
            String academicyear = "";
            while (resultSet.next()) {
                academicyear = resultSet.getString("AcademicYear");
                System.out.println(academicyear);

            }
            Selectedacademicyear.setText(academicyear);

            String mySqlQuery1 = "select Examinationid from exam order by  Examinationid desc limit 1";
            PreparedStatement preparedStatement1 = myConn.prepareStatement(mySqlQuery1);
            //System.out.println(mySqlQuery1);
            ResultSet resultSet1 = preparedStatement1.executeQuery();
            
            
            String mySqlQuery2 = "select Examinationid from exam order by  Examinationid desc limit 1";
            PreparedStatement preparedStatement2 = myConn.prepareStatement(mySqlQuery2);
            //System.out.println(mySqlQuery1);
            ResultSet resultSet2 = preparedStatement2.executeQuery();
            String sem = (Scheduletable.getModel().getValueAt(select_row, 3).toString());
            
            String examid = "";
            String newexamid = "";
            if (resultSet1.next() == false) {
                
                 if (Integer.parseInt(sem) % 2 == 0) {
                        newexamid = academicyear + "-02";

                    } else 
                    {
                  
                        newexamid = academicyear + "-01";
                    }

            } 
            else {
                
                while (resultSet2.next()) 
                {
                    examid = resultSet2.getString("Examinationid");
                    System.out.println(examid);
                }

                System.out.println(examid.substring(0, 9));
                if (academicyear.equals(examid.substring(0, 9))) 
                {

                    if (Integer.parseInt(sem) % 2 == 0) {
                        newexamid = examid.substring(0, 9) + "-02";

                    } else 
                    {
                  
                        newexamid = examid.substring(0, 9) + "-01";
                    }
                } 
                else 
                {
                    newexamid = academicyear + "-01";
                }
           
            
            }
            Selectedexamid.setText(newexamid+"-"+deptcode);
        } catch (Exception ex) {
            // System.out.print(ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }

    }//GEN-LAST:event_ScheduletableMouseClicked

    private void Dept_selectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Dept_selectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Dept_selectActionPerformed

    private void Subject_codeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Subject_codeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Subject_codeActionPerformed

    private void SchedualBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SchedualBtnActionPerformed
        // TODO add your handling code here:

        String selectedexamid = Selectedexamid.getText();

        String selectedsubcode = SelectedSubCode.getText();
        String accdyear = Selectedacademicyear.getText();
        System.out.println("accdyear"+accdyear);
        
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String examdate = sdf.format(jDateChooser1.getDate());

        String starttime = StartTime_tf.getText();
        String endtime = EndTime_tf.getText();
        //ExamType

        //Adcademinid code
        try {
            Connection myConn = MySQLConnection.getConnection();
            String query1 = "select Acad_Id from academicyear where AcademicYear ='" + accdyear + "'";
            PreparedStatement preparedStatement = myConn.prepareStatement(query1);
            //System.out.println(mySqlQuery);
            ResultSet resultSet1 = preparedStatement.executeQuery();
            int academicid = 0;
            while (resultSet1.next()) {
                academicid = resultSet1.getInt("Acad_Id");
                System.out.println(academicid);

            }
            //Dept_It
            String query2 = "select Dept_Id from department where Dept_code ='" + deptcode + "'";
            PreparedStatement preparedStatement2 = myConn.prepareStatement(query2);
            //System.out.println(mySqlQuery);
            ResultSet resultSet2 = preparedStatement2.executeQuery();
            int deptid = 0;
            while (resultSet2.next()) {
                deptid = resultSet2.getInt("Dept_Id");
                System.out.println(deptid);

            }
            //INSERT INTO `miniexammanagement`.`exam` (`Examinationid`, `DeptId`, `Class`, `SubCode`, `AcademicId`, `ExamDate`, `ExamStartTime`, `ExamEndTime`, `ExamType`, `SetVisible`) VALUES ('1', '1', '1', '1', '1', '1', '1', '1', '1', '1');

            //Insert in exam table
            String query3 = "INSERT INTO exam (Examinationid, DeptId, Class, SubCode, AcademicId, ExamDate, ExamStartTime,ExamEndTime,ExamType,SetVisible) VALUES "
                    + "('" + selectedexamid + "'," + deptid + ",'" + studclass + "','" + selectedsubcode
                    + "'," + academicid + ",'" + examdate + "','" + starttime + "','" + endtime + "','" + ExamType + "',1)";
            PreparedStatement preparedStatement3 = myConn.prepareStatement(query3);
            preparedStatement3.execute();
           // System.out.println(query3);

            myConn.close();
        } catch (Exception ex) {
            // System.out.print(ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }


    }//GEN-LAST:event_SchedualBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Schedule_Exam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Schedule_Exam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Schedule_Exam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Schedule_Exam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Schedule_Exam().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Dept_select;
    private javax.swing.JButton EndTime_Button;
    private javax.swing.JTextField EndTime_tf;
    private javax.swing.JButton SchedualBtn;
    public static javax.swing.JTable Scheduletable;
    private javax.swing.JButton SearchBtn;
    public static javax.swing.JLabel SelectedSubCode;
    public static javax.swing.JLabel SelectedSubName;
    private javax.swing.JTextField Selectedacademicyear;
    private javax.swing.JTextField Selectedexamid;
    private javax.swing.JComboBox<String> Semester_code;
    private javax.swing.JButton StartTime_Button;
    private javax.swing.JTextField StartTime_tf;
    private javax.swing.JComboBox<String> Subject_code;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private cambodia.raven.Time time1;
    private cambodia.raven.Time time2;
    // End of variables declaration//GEN-END:variables
}
