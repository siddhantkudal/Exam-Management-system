package ExamCell;

import java.awt.Color;
import java.awt.Font;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import test.MySQLConnection;
import test.Switch_User;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


/**
 *
 * @author ikuna
 */
public class E_Exam extends javax.swing.JPanel {
    

    /**
     * Creates new form E_Exam
     */
    public E_Exam() {
        initComponents();
        Exam_Table.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD,14));
        Exam_Table.getTableHeader().setOpaque(false);
        Exam_Table.getTableHeader().setBackground(new Color(32,136,203));
        Exam_Table.getTableHeader().setForeground(new Color(255,255,255));
        Exam_Table.setRowHeight(25);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SearchBtn = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        Exam_Table = new javax.swing.JTable();
        Department = new javax.swing.JComboBox<>();
        StudClass = new javax.swing.JComboBox<>();
        ExamType = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        AcademicYear = new javax.swing.JTextField();
        ScheduleBtn1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        history = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(250, 250, 250));
        setMinimumSize(new java.awt.Dimension(886, 551));

        SearchBtn.setBackground(new java.awt.Color(19, 103, 149));
        SearchBtn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        SearchBtn.setForeground(new java.awt.Color(255, 255, 255));
        SearchBtn.setText("Search");
        SearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBtnActionPerformed(evt);
            }
        });

        Exam_Table.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        Exam_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "SubName", "Department", "Class", "Date", "Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Exam_Table.setFocusable(false);
        Exam_Table.setIntercellSpacing(new java.awt.Dimension(0, 0));
        Exam_Table.setRowHeight(25);
        Exam_Table.setSelectionBackground(new java.awt.Color(0, 153, 255));
        Exam_Table.setShowVerticalLines(false);
        Exam_Table.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(Exam_Table);

        Department.setBackground(new java.awt.Color(19, 103, 149));
        Department.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        Department.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "IT", "CSE", "ENTC", "ELN", "CIVIL", "MECH", "MTECH" }));

        StudClass.setBackground(new java.awt.Color(19, 103, 149));
        StudClass.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        StudClass.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "FY-01", "FY-02", "SY-03", "SY-04", "TY-05", "TY-06", "BE-07", "BE-08" }));

        ExamType.setBackground(new java.awt.Color(19, 103, 149));
        ExamType.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        ExamType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "Theory", "Practical", "Theory/Practical" }));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel1.setText("Academic Year");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setText("Department");

        jLabel3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel3.setText("Class");

        jLabel4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel4.setText("Type");

        AcademicYear.setBackground(new java.awt.Color(250, 250, 250));
        AcademicYear.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        AcademicYear.setText("1");

        ScheduleBtn1.setBackground(new java.awt.Color(19, 103, 149));
        ScheduleBtn1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        ScheduleBtn1.setForeground(new java.awt.Color(255, 255, 255));
        ScheduleBtn1.setText("Schedule Exam");
        ScheduleBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ScheduleBtn1ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel5.setText("Records");

        history.setBackground(new java.awt.Color(19, 103, 149));
        history.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        history.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "Old", "Current" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(AcademicYear, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(107, 107, 107)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Department, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(179, 179, 179)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(StudClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(history, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ExamType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(65, 65, 65))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 867, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SearchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(132, 132, 132)
                .addComponent(ScheduleBtn1)
                .addGap(262, 262, 262))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Department, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StudClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ExamType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AcademicYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(history, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ScheduleBtn1)
                    .addComponent(SearchBtn))
                .addGap(50, 50, 50))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void SearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tbmodel = (DefaultTableModel)Exam_Table.getModel();
        tbmodel.setRowCount(0);
        
       try {

            Connection myConn = MySQLConnection.getConnection();

            String academicyear = AcademicYear.getText();
            String department ="="+"'"+Department.getSelectedItem().toString()+"'";
            String class1 = "="+"'"+StudClass.getSelectedItem().toString()+"'";
            String type="="+"'"+ExamType.getSelectedItem().toString()+"'";
            String rec="="+"'"+history.getSelectedItem().toString()+"'";
            
            if(department.equals("='All'"))
                {
                    department=" in ('IT','CSE','ELN','ENTC','MECH','CIVIL','MTECH')";
                    

                }
            if(class1.equals("='All'"))
            {
                class1=" in ('FY-01','FY-02','SY-03','SY-04','TY-05','TY-06','BE-07','BE-08')";
            }
             if(type.equals("='All'"))
            {
                type=" in ('Theory','Practical','Theory/Practical')";
            }
            if(rec.equals("='All'"))
            {
                rec=" in (0,1)";
            }
            else if(rec.equals("='Old'"))
            {
                rec=" in (0)";
            }
            else  if(rec.equals("='Current'"))
            {
                rec=" in (1)";
            }
            String query="select Dept_Id from department where Dept_code"+department;
            String query1="select Acad_Id from academicyear where academicyear.AcademicYear ='"+academicyear+"'";
            String query2="SELECT Sub_Name,(SELECT Dept_code from Department where Dept_Id = exam.DeptId)as DeptCode,exam.class,exam.ExamDate,concat(concat(exam.ExamStartTime,\"-\"),exam.ExamEndTime) as ExamTime from subject inner join "
                    +"exam on subject.Sub_Code=exam.SubCode where exam.DeptId in ("+query+")"+" and exam.AcademicId =("+query1+")"
                    + " and exam.class "+class1+" and exam.ExamType "+type
                    + " and exam.SetVisible "+rec;
            
            PreparedStatement preparedStatement = myConn.prepareStatement(query2);
                //System.out.println(query2);
                ResultSet resultSet = preparedStatement.executeQuery();
                
                while (resultSet.next()) {
                    
                    String SubName=resultSet.getString("Sub_Name");
                    String deptcode=resultSet.getString("DeptCode");
                    String claas=resultSet.getString("exam.class");
                    String examdate=resultSet.getString("exam.ExamDate");
                    String examtime=resultSet.getString("ExamTime");
                   
                    
                        String tbdata[] = {SubName,deptcode,claas,examdate,examtime};
                    /*DefaultTableModel tbmodel = (DefaultTableModel)course_table.getModel();*/

                    tbmodel.addRow(tbdata);
                }
          
            
       }
      catch (Exception exception) {
            //System.out.print(exception);
            JOptionPane.showMessageDialog(this, "Database error: " + exception.getMessage());
        }  
        
    }//GEN-LAST:event_SearchBtnActionPerformed

    private void ScheduleBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ScheduleBtn1ActionPerformed
        // TODO add your handling code here:
         Schedule_Exam pi = new Schedule_Exam();
            pi.setVisible(true);
            
            
    }//GEN-LAST:event_ScheduleBtn1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AcademicYear;
    private javax.swing.JComboBox<String> Department;
    private javax.swing.JComboBox<String> ExamType;
    private javax.swing.JTable Exam_Table;
    private javax.swing.JButton ScheduleBtn1;
    private javax.swing.JButton SearchBtn;
    private javax.swing.JComboBox<String> StudClass;
    private javax.swing.JComboBox<String> history;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
