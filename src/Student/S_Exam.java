/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Student;

import java.awt.Color;
import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import test.LoginSession;
import test.MySQLConnection;
import test.Switch_User;

/**
 *
 * @author ikuna
 */
public class S_Exam extends javax.swing.JPanel {
    //S_ExamForm pi;
     public static String examid="";
    /**
     * Creates new form S_Exam
     */
    public S_Exam() {
        initComponents();
        TimeTable.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD,14));
        TimeTable.getTableHeader().setOpaque(false);
        TimeTable.getTableHeader().setBackground(new Color(32,136,203));
        TimeTable.getTableHeader().setForeground(new Color(255,255,255));
        TimeTable.setRowHeight(25);
        
        DefaultTableModel tbmodel = (DefaultTableModel)TimeTable.getModel();
        tbmodel.setRowCount(0);
        try {

            Connection myConn = MySQLConnection.getConnection();

         
                String mySqlQuery
                        = "SELECT Examinationid, SubCode,ExamDate, ExamStartTime, ExamEndTime, ExamType from exam inner join student on exam.DeptId = student.DeptId " +
                        "where student.Class=exam.Class and student.AcademId=exam.AcademicId and student.EnrollmentId=" +LoginSession.UserId+
                        " and SetVisible=1 order by exam.ExamDate";
                      
                PreparedStatement preparedStatement = myConn.prepareStatement(mySqlQuery);
                //System.out.println("try   "+mySqlQuery);
                ResultSet resultSet = preparedStatement.executeQuery();
                
                String subcode = "";
                String examdate="";
                String examstarttime="";
                String examendtime="";
                String examtype="";
                String subname="";

                while (resultSet.next()) {

                    subcode = resultSet.getString("SubCode");
                    examid=resultSet.getString("Examinationid");
                    
                    examdate = resultSet.getString("ExamDate");
                    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                    SimpleDateFormat sdf2 = new SimpleDateFormat("dd-MMM-yyyy");
                    examdate=sdf2.format(sdf.parse(examdate));
                    
                    examstarttime = resultSet.getString("ExamStartTime");
                    examendtime = resultSet.getString("ExamEndTime");
                    examtype = resultSet.getString("ExamType");
                    //String SubjectName = resultSet.getString("Sub_Name");
                    String query
                        = "SELECT Sub_Name from subject where Sub_Code='"+subcode+"'";
           
                      
                    PreparedStatement preparedStatement1 = myConn.prepareStatement(query);
                   // System.out.println(query);
                    ResultSet resultSet1 = preparedStatement1.executeQuery();
                    
                    while(resultSet1.next()){
                        subname = resultSet1.getString("Sub_Name");
                    }
                    String tbdata[] = {subcode,subname,examtype,examdate,examstarttime+"-"+examendtime};
                    /*DefaultTableModel tbmodel = (DefaultTableModel)course_table.getModel();*/
                    
                    tbmodel.addRow(tbdata);
                    
                }

            

        } catch (Exception exception) {
            //System.out.print(exception);
            JOptionPane.showMessageDialog(this, "Database error: " + exception.getMessage());
        }
        
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TimeTable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        ExamFormBTN = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        TimeTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        TimeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Subject Code", "Subject Name", "Exam Type", "Date", "Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TimeTable.setFocusable(false);
        TimeTable.setIntercellSpacing(new java.awt.Dimension(0, 0));
        TimeTable.setRowHeight(25);
        TimeTable.setSelectionBackground(new java.awt.Color(232, 57, 95));
        TimeTable.setShowVerticalLines(false);
        TimeTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(TimeTable);

        jLabel4.setBackground(new java.awt.Color(19, 103, 149));
        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setText("In Semester Examination Time-Table");

        ExamFormBTN.setBackground(new java.awt.Color(19, 103, 149));
        ExamFormBTN.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        ExamFormBTN.setForeground(new java.awt.Color(250, 250, 250));
        ExamFormBTN.setText("Exam Form");
        ExamFormBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExamFormBTNActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(19, 103, 149));
        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(250, 250, 250));
        jButton1.setText("View Exam Form");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 953, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(367, 367, 367)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(211, 211, 211)
                .addComponent(ExamFormBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(193, 193, 193))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ExamFormBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(153, 153, 153))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ExamFormBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExamFormBTNActionPerformed
      
      
        
        Exam_Form pi = new Exam_Form();
        pi.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_ExamFormBTNActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        S_PrintExamForm p1=new S_PrintExamForm();
        p1.setVisible(true);

    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ExamFormBTN;
    private javax.swing.JTable TimeTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
